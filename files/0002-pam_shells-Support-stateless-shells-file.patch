From 6649a6e7e7e895c4efa25cfd19b2a2b8651fc810 Mon Sep 17 00:00:00 2001
From: Ikey Doherty <ikey@solus-project.com>
Date: Sat, 12 Mar 2016 12:22:22 +0000
Subject: [PATCH 2/2] pam_shells: Support stateless shells file

Signed-off-by: Ikey Doherty <ikey@solus-project.com>
---
 modules/pam_shells/pam_shells.c | 16 ++++++++++++----
 1 file changed, 12 insertions(+), 4 deletions(-)

diff --git a/modules/pam_shells/pam_shells.c b/modules/pam_shells/pam_shells.c
index 68bd607..8245933 100644
--- a/modules/pam_shells/pam_shells.c
+++ b/modules/pam_shells/pam_shells.c
@@ -1,6 +1,7 @@
 /* pam_shells module */
 
 #define SHELL_FILE "/etc/shells"
+#define STATELESS_SHELL_FILE "/usr/share/defaults/etc/shells"
 
 /*
  * by Erik Troan <ewt@redhat.com>, Red Hat Software.
@@ -43,6 +44,13 @@ static int perform_check(pam_handle_t *pamh)
     struct stat sb;
     struct passwd * pw;
     FILE * shellFile;
+    const char *shellPath = NULL;
+
+    if (access(SHELL_FILE, F_OK) == 0) {
+        shellPath = SHELL_FILE;
+    } else {
+        shellPath = STATELESS_SHELL_FILE;
+    }
 
     retval = pam_get_user(pamh, &userName, NULL);
     if (retval != PAM_SUCCESS) {
@@ -67,8 +75,8 @@ static int perform_check(pam_handle_t *pamh)
     }
     userShell = pw->pw_shell;
 
-    if (stat(SHELL_FILE,&sb)) {
-	pam_syslog(pamh, LOG_ERR, "Cannot stat %s: %m", SHELL_FILE);
+    if (stat(shellPath,&sb)) {
+	pam_syslog(pamh, LOG_ERR, "Cannot stat %s: %m", shellPath);
 	return PAM_AUTH_ERR;		/* must have /etc/shells */
     }
 
@@ -79,9 +87,9 @@ static int perform_check(pam_handle_t *pamh)
 	return PAM_AUTH_ERR;
     }
 
-    shellFile = fopen(SHELL_FILE,"r");
+    shellFile = fopen(shellPath,"r");
     if (shellFile == NULL) {       /* Check that we opened it successfully */
-	pam_syslog(pamh, LOG_ERR, "Error opening %s: %m", SHELL_FILE);
+	pam_syslog(pamh, LOG_ERR, "Error opening %s: %m", shellPath);
 	return PAM_SERVICE_ERR;
     }
 
-- 
2.7.1

